on:
  workflow_call:
    inputs:
      mongo:
        required: false
        description: start a mongo instance for tests
        type: boolean
        default: false
      lint:
        required: false
        description: lint with ruff
        type: boolean
        default: false
      format:
        required: false
        description: check formatting with ruff
        type: boolean
        default: false
      python-version:
        required: false
        type: string
        # renovate: datasource=conda depName=conda-forge/python
        default: "3.12.6"
      poetry-version:
        required: false
        type: string
        # renovate: datasource=pypi depName=poetry versioning=pep440
        default: "1.8.3"
      ruff-version:
        required: false
        type: string
        # renovate: datasource=pypi depName=ruff versioning=pep440
        default: "0.6.4"
      mypy-check-files:
        required: false
        description: extra files to check with mypy
        type: string
        default: ""
    secrets:
      PYPI_API_TOKEN:
        required: true

jobs:

  lint:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
    - name: ruff format
      uses: chartboost/ruff-action@e18ae971ccee1b2d7bbef113930f00c670b78da4 # v1
      with:
        version: ${{ inputs.ruff-version }}
        args: format --check --diff
      env:
        RUFF_FORMAT: github
      if: ${{ inputs.format }}
    - name: ruff check
      uses: chartboost/ruff-action@e18ae971ccee1b2d7bbef113930f00c670b78da4 # v1
      with:
        version: ${{ inputs.ruff-version }}
      env:
        RUFF_FORMAT: github
      if: ${{ inputs.lint }}

  test:
    runs-on: ubuntu-24.04
    needs: [lint]
    services:
      mongo:
        # hobo conditional service; see https://github.com/actions/runner/issues/822#issuecomment-1831511432
        image: ${{ (inputs.mongo && 'mongo:7') || '' }}
        ports:
          - 27017:27017
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
    - name: "Set up environment"
      uses: packetcoders/action-setup-cache-python-poetry@0d0be5577b30d85f3fa2d93a4beeda149520f120 # v1.2.0
      with:
        python-version: ${{ inputs.python-version }}
        poetry-version: ${{ inputs.poetry-version }}
        install-args: --all-extras
    - name: Install root
      run: poetry run pip install -e . --no-deps
    - run: poetry run pytest
      env:
        MONGO_PORT: ${{ job.services.mongo.ports[27017] }}
  
  mypy:
    runs-on: ubuntu-24.04
    needs: [lint]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
    - name: "Set up environment"
      uses: packetcoders/action-setup-cache-python-poetry@0d0be5577b30d85f3fa2d93a4beeda149520f120 # v1.2.0
      with:
        python-version: ${{ inputs.python-version }}
        poetry-version: ${{ inputs.poetry-version }}
        install-args: --all-extras --sync
    - name: Install root
      run: poetry run pip install -e . --no-deps
    - run: poetry run mypy
    - if: ${{ inputs.mypy-check-files }}
      run: poetry run mypy ${{ inputs.mypy-check-files }}

  check_version:
    name: Tag version bump
    runs-on: ubuntu-24.04
    # run only on pushes, not PRs
    if: ${{ github.event_name == 'push' && github.base_ref == null }}
    needs: [test, mypy]
    outputs:
      should_publish: ${{ steps.check.outputs.should_publish }} 
    steps:
    - uses: jvansanten/action-tag-poetry-version-bump@d73cfa04bb2aed13201290cc066b9d64082434b8 # v1
      id: check

  pypi:
    name: Publish to PyPI
    runs-on: ubuntu-24.04
    needs: [check_version]
    # NB: outputs are always strings; explicitly parse to get a boolean
    if: ${{ fromJSON(needs.check_version.outputs.should_publish) }}
    
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
    # NB: we don't actually need to install the dependencies, but if we've
    # gotten this far they're cached anyway
    - name: "Set up environment"
      uses: packetcoders/action-setup-cache-python-poetry@0d0be5577b30d85f3fa2d93a4beeda149520f120 # v1.2.0
      with:
        python-version: ${{ inputs.python-version }}
        poetry-version: ${{ inputs.poetry-version }}
        install-args: --all-extras
    - name: Publish
      run: |
        poetry publish -n --build
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
